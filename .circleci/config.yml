version: 2.1
orbs:
  ruby: circleci/ruby@1.1.2
  heroku: circleci/heroku@1.2.3
  docker: banzaicloud/docker@0.0.5

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7-node
    working_directory: ~/fav-albums
    steps:
      - checkout:
          path: ~/fav-albums
      - ruby/install-deps

  test:
    docker:
      - image: circleci/ruby:2.7-node
      - image: circleci/mysql:5.5
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
      - image: selenium/standalone-chrome-debug:latest
        name: chrome
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
      SELENIUM_DRIVER_URL: http://chrome:4444/wd/hub 
    working_directory: ~/fav-albums
    steps:
      - checkout:
          path: ~/fav-albums
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: Add yarn
          command: yarn install
      - run:
          name: Webpack setup
          command: bundle exec bin/webpack
      - run:
          name: test
          command: bundle exec rspec

  deploy:
    docker:
      - image: circleci/ruby:2.7-node
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - heroku/install
      - run: echo $RAILS_MASTER_KEY
      - run:
          name: heroku login
          command: heroku container:login
      - run:
          name: push docker image
          command: heroku container:push web --RAILS_MASTER_KEY=${RAILS_MASTER_KEY} -a $HEROKU_APP_NAME
      - run:
          name: release docker image
          command: heroku container:release web -a $HEROKU_APP_NAME
      - run:
          name: database setup
          command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      # - build
      # - test:
      #     requires:
      #       - build
      - deploy:
          context: deploy
          # requires:
          #   - test
          filters:
            branches:
              only: master